#include<bits/stdc++.h>
#define double long double
#define pb push_back
using namespace std;
const double eps=1e-9;
vector<double> g_pas;
vector<double> next_g;
vector<double> b;
vector<vector<double> > mat(1000);
//int c=0;
int n;

void solve(){
	for(int i=0; i<n; i++){
		if(mat[i][i]==0){
			for(int j=i+1; j<n; j++){
				if(mat[j][i]){
					swap(mat[i],mat[j]);
					swap(b[i],b[j]);
					break;
				}
			}
		}
		for(int i=0; i<n; i++){
			for(int j=0; j<n; j++){
				cout<<mat[i][j]<<" ";
			}
			cout<<b[i]<<endl;
		}
		cout<<"---------"<<endl;
		for(int j=i+1; j<n; j++){
			double div=mat[j][i]/mat[i][i];
			for(int h=i; h<n; h++){
				mat[j][h]-=div*mat[i][h];
			}
			b[j]-=b[i]*div;
		}
	}
	for(int i=0; i<n; i++){
		for(int j=0; j<n; j++){
			cout<<mat[i][j]<<" ";
		}
		cout<<b[i]<<endl;
	}
	cout<<"---------"<<endl;
	double x[n];
	for(int i=n-1; i>=0; i--){
		double sum=0;
		
		for(int j=n-1; j>i; j--){
			sum+=x[j]*mat[i][j];
		}
		
		x[i]=(b[i]-sum)/mat[i][i];
		
	}
	for(auto y:x){
		cout<<y<<" ";
	}cout<<endl;
	vector<double> error;
	for(int i=0; i<n; i++){
		double k=b[i];
		for(int j=0; j<n; j++){
			k-=x[j]*mat[i][j];
		}
		error.pb(k);
	}
//	
	double sum_error=0.0;
	for(auto x:error){
		sum_error+=fabs(x);
	}
	cout<<sum_error<<endl;
}

void generate(){
	int pas=10,bb=20,a=10;
	g_pas.clear();
	for(int i=0; i<n; i++){
		double cur=0;
		for(int j=0; j<10; j++){
			cur=rand()%pas;
		}
		g_pas.pb(cur);
	}
	mat.resize(n);
	for(int i=0; i<n; i++){
		mat[i].clear();
	}
	for(int i=0; i<n; i++){
		double cur=1;
		for(int j=0; j<n; j++){
			mat[i].pb(cur);
			cur*=g_pas[i];
		}
	}
	
	b.clear();
	for(int i=0; i<n; i++){
		double cur=0;
		for(int j=0; j<10; j++){
			cur=rand()%bb;
		}
		b.pb(cur);
	}
	for(int i=0; i<n; i++){
		for(int j=0; j<n; j++){
			cout<<mat[i][j]<<" ";
		}
		cout<<b[i]<<endl;
	}
	cout<<"---------"<<endl;
	for(int i=0; i<n; i++){
		cout<<g_pas[i]<<" ";
	}cout<<endl<<"---------"<<endl;
}
int main(){
	
	cout<<setprecision(9)<<fixed;
	n=3;
	generate();
	solve();
}
